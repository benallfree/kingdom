<div
  x-init="
   pb.send(`/api/login`).then(res => {
        const {token, user} = res
        pb.authStore.save(token, user)
        isReady = true
        auth = user
        $nextTick(jdenticon)
        console.log({res})
        roomState = res.roomState
      })
    const unsub = pb.collection('rooms').subscribe('2ruk2zo3x8k11h5', (e) => {
      roomState = e.record.state
      $nextTick(jdenticon)
    })
        $watch('roomState', value => {
          msRemaining = value.roundExpiry - Date.now()
          pctRemaining = msRemaining / value.roundTtl
        })
    
    $nextTick(() => {
      setInterval(() => {
        msRemaining = roomState.roundExpiry - Date.now()
        pctRemaining = msRemaining / roomState.roundTtl
      }, 100)
    })
    "
  x-data="{
    msRemaining: 0,
    pctRemaining: 0,
    auth: null,
    isReady: false,
    getCell(idx) {
      if (!this.roomState.grid[idx]) {
        this.roomState.grid[idx] = {
          joining: false,
          playerId: null
        }
      }
      return this.roomState.grid[idx]
    },
    roomState: {
      grid: {},
      players: {},
      roundNum: 0,
      roundExpiry: 0,
      maxRounds: 0,
      roundTtl: 0
    },
    join(idx) {
      this.getCell(idx).joining = true
      pb.send(`/api/join?idx=${idx}`).then(res => {
        Object.entries(res.grid).forEach(([k, v]) => {
          this.getCell(k).playerId = v.playerId
        })
        $nextTick(jdenticon)
        // console.log(JSON.stringify(this.grid, null, 2))
      }).finally(() => {
        this.getCell(idx).joining = false
      })
    }
  }"
>
  <div x-show="isReady">
    <div class="flex flex-col items-center">
      <div class="m-10">
        Round
        <progress
          x-bind:class="`progress  ${pctRemaining > 0.7 ? 'progress-success' : (pctRemaining > 0.3 ? 'progress-info' : 'progress-error')} w-96`"
          x-bind:max="roomState.roundTtl"
          x-bind:value="msRemaining"
        ></progress>
      </div>
      <div class="flex flex-row gap-4 mb-5">
        <svg
          class="size-8"
          x-show="auth"
          x-bind:data-jdenticon-value="auth?.id"
        ></svg>
        <div>Coins: 100</div>
        <div>Health: 100</div>
      </div>
      <div>
        <div class="grid grid-cols-10 gap-1">
          <template x-for="i in 100">
            <div class="w-10 h-10 bg-primary relative" x-on:click="join(i)">
              <div
                x-show="getCell(i).joining"
                class="absolute top-0 left-0 w-full h-full bg-primary"
              >
                joining
              </div>
              <div
                x-show="getCell(i).playerId"
                class="absolute top-0 left-0 w-full h-full"
              >
                <svg
                  class="w-full h-full"
                  x-bind:data-jdenticon-value="getCell(i).playerId"
                ></svg>
              </div>
            </div>
          </template>
        </div>
      </div>
    </div>
  </div>
</div>
